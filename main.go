package main

import (
	"log"
	"os"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/joho/godotenv"
)

func main() {
	// –∑–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ .env
	err := godotenv.Load()
	if err != nil {
		log.Fatal("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ .env —Ñ–∞–π–ª–∞")
	}

	// –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ env
	token := os.Getenv("TELEGRAM_BOT_TOKEN")
	if token == "" {
		log.Fatal("TELEGRAM_BOT_TOKEN is not set")
	}

	// –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ api telegram
	bot, err := tgbotapi.NewBotAPI(token)
	if err != nil {
		log.Panic("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞:", err)
	}

	// —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
	bot.Debug = true
	log.Printf("–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å –∫–∞–∫ %s", bot.Self.UserName)

	// —Å–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60

	// –∑–∞–ø—É—Å–∫–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
	updates := bot.GetUpdatesChan(u)
	for update := range updates {
		// –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à–µ–ª/–≤—ã—à–µ–ª
		if update.Message == nil {
			continue
		}

		// –ª–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å
		log.Printf("[%s] %s", update.Message.From.UserName, update.Message.Text)

		// –æ–±–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
		if update.Message.IsCommand() {
			switch update.Message.Command() {
			case "start":
				// —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
				keyboard := tgbotapi.NewReplyKeyboard(
					tgbotapi.NewKeyboardButtonRow(
						tgbotapi.NewKeyboardButton("üîç –ü–æ–∏—Å–∫ –º–µ–º–∞"),
						tgbotapi.NewKeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω—ã–π –º–µ–º"),
					),
				)

				// –æ–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ + –∫–Ω–æ–ø–∫–∏
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–µ–º–æ–≤!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
				msg.ReplyMarkup = keyboard
				bot.Send(msg)

			case "help":
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–≠—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –∏—â–µ—Ç –º–µ–º—ã –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É.\n–í—ã–±–µ—Ä–∏—Ç–µ '–ü–æ–∏—Å–∫ –º–µ–º–∞' –∏–ª–∏ '–†–∞–Ω–¥–æ–º–Ω—ã–π –º–µ–º'.")
				bot.Send(msg)

			default:
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É üò¢")
				bot.Send(msg)
			}
		} else {
			// –æ–±–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
			switch update.Message.Text {
				case "üîç –ü–æ–∏—Å–∫ –º–µ–º–∞":
					msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ù–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å –º–µ–º:")
					bot.Send(msg)

				case "üé≤ –†–∞–Ω–¥–æ–º–Ω—ã–π –º–µ–º":
					msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –∑–∞–≥–ª—É—à–∫–∞ –±—Ä–æ")
					bot.Send(msg)

				default:
					msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É üò¢")
					bot.Send(msg)
			}
		}
	}
}
